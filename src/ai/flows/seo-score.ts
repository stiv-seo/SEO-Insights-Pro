// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview SEO Score flow for evaluating on-page SEO performance.
 *
 * - seoScore - A function that calculates the SEO score for a given webpage.
 * - SeoScoreInput - The input type for the seoScore function.
 * - SeoScoreOutput - The return type for the seoScore function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SeoScoreInputSchema = z.object({
  url: z.string().describe('The URL of the webpage to analyze.'),
  scrapingData: z.string().describe('The scraped HTML content and metadata of the webpage.'),
});
export type SeoScoreInput = z.infer<typeof SeoScoreInputSchema>;

const SeoScoreOutputSchema = z.object({
  seoScore: z.number().describe('The overall SEO score of the webpage (0-100).'),
  justification: z.string().describe('A detailed explanation of the score, highlighting strengths and weaknesses.'),
});
export type SeoScoreOutput = z.infer<typeof SeoScoreOutputSchema>;

export async function seoScore(input: SeoScoreInput): Promise<SeoScoreOutput> {
  return seoScoreFlow(input);
}

const prompt = ai.definePrompt({
  name: 'seoScorePrompt',
  input: {schema: SeoScoreInputSchema},
  output: {schema: SeoScoreOutputSchema},
  prompt: `You are an SEO expert. Evaluate the on-page SEO performance of a webpage based on the following information:\n\nURL: {{{url}}}\n\nScraped Data: {{{scrapingData}}}\n\nProvide an overall SEO score (0-100) and a detailed justification for the score.  Consider factors such as meta descriptions, header tags, image alt text, schema.org markup, keyword usage, and overall content quality.  Provide specific suggestions for improvement.\n\nEnsure the score and justification are in Spanish.
\nRemember to use a score between 0 and 100. The score should reflect the overall quality and opportunities to improve.\n\nEnsure the justification for the score are in Spanish.
`,
});

const seoScoreFlow = ai.defineFlow(
  {
    name: 'seoScoreFlow',
    inputSchema: SeoScoreInputSchema,
    outputSchema: SeoScoreOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
